<?xml version="1.0" encoding="UTF-8"?>
<C-Project id="default" name="Codigos varidados" revision="">
	<C-File name="Exercicio5.c" sloc="50" jdoc="n">
		<function name="imprimeVetor" access="auto" jdoc="null">
			<param name="vet"/>
			<lvar name="x" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="nome" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio1.c" sloc="50" jdoc="n">
		<function name="string" access="auto" jdoc="null">
			<param name="nome"/>
			<lvar name="x" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
		</function>
	</C-File>
	<C-File name="Exercicio6.c" sloc="50" jdoc="n">
		<function name="inverteVetor" access="auto" jdoc="null">
			<param name="vetor"/>
			<param name="vetorInvertido"/>
			<lvar name="x" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="vetor" count="5"/>
			<lvar name="vetorInvertido" count="5"/>
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio4.c" sloc="50" jdoc="n">
		<comm cntt="iguais, porque foi passado o endere�o de a, e num est� apontando para esse endere�o"/>
		<function name="imprime_endereco" access="auto" jdoc="null">
			<param name="num"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="a" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio2.c" sloc="50" jdoc="n">
		<function name="contaImpares" access="auto" jdoc="null">
			<param name="num"/>
			<param name="x"/>
			<lvar name="cont" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="num" count="5"/>
		</function>
	</C-File>
	<C-File name="prova2.c" sloc="50" jdoc="n">
		<function name="inverteVetor" access="auto" jdoc="null">
			<param name="vetor"/>
			<param name="vetorInvertido"/>
			<lvar name="x" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="vetor" count="5"/>
			<lvar name="vetorInvertido" count="5"/>
		</function>
	</C-File>
	<C-File name="prova3.c" sloc="50" jdoc="n">
		<struct name="conjunto" access="global" jdoc="null">
			<structMembers name="tamanho" count="50"/>
			<structMembers name="elementos" count="50"/>
		</struct>
		<function name="intersecao" access="auto" jdoc="null">
			<param name="A"/>
			<param name="B"/>
			<lvar name="cont" count="5"/>
		</function>
		<function name="diferenca" access="auto" jdoc="null">
			<param name="A"/>
			<param name="B"/>
			<lvar name="cont" count="5"/>
			<lvar name="valida" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="cont" count="5"/>
		</function>
	</C-File>
	<C-File name="Prova.c" sloc="50" jdoc="n">
		<GlobalVar name="tabuleiro" access="auto" jdoc="eu"/>
		<GlobalVar name="jogar" access="auto" jdoc="eu"/>
		<GlobalVar name="imprime_tab" access="auto" jdoc="eu"/>
		<function name="main" access="auto" jdoc="null">
			<comm cntt="variaveis usadas no for de limpar o tabuleiro"/>
			<comm cntt="variaveis do jogo"/>
			<comm cntt="variavel que define se o jogo acabou ou nao acabou(1 jogo acontecendo, 0 jogo nao acontecendo)"/>
			<comm cntt="define qual player esta jogando"/>
			<comm cntt="Esse for garante que quaso exista lixo na memoria do array, ele seja transformado em zero"/>
			<comm cntt="loop infinito ate o fim do jogo, ou seja at� status ser zero"/>
			<comm cntt="Solicita a entrada x do usuario"/>
			<comm cntt="testa a entrada x do usuario"/>
			<comm cntt="solicita a entrada y do usuario"/>
			<comm cntt="testa a entrada y do usuario"/>
			<comm cntt="troca de player entre os players 1(X) e 2(O)"/>
			<comm cntt="chama a funcao jogar e colocar o valor de retorno em status se status for 1 o jogo continua, se for 0 � fim de jogo"/>
			<comm cntt="fim do programa e fim de jogo"/>
			<param name=""/>
			<lvar name="contX" count="5"/>
			<lvar name="x" count="5"/>
			<lvar name="status" count="5"/>
		</function>
		<function name="jogar" access="auto" jdoc="null">
			<comm cntt="variavel usada para testar o valor de retorno"/>
			<comm cntt="insere o valor de c no tabuleiro"/>
			<comm cntt="chama a fu��o para imprimir o tabuleiro e guarda o valor de retorno em teste"/>
			<comm cntt="testa se o valor de teste � ou n�o zero, se for, ent�o o tabuleiro esta cheio, e � fim de jogo"/>
			<comm cntt="retorna zero, fim de jogo"/>
			<comm cntt="sen�o ainda tem pos��es livres no array e o jogo deve continuar"/>
			<comm cntt="retorna 1, o jogo continua"/>
			<param name="x"/>
			<param name="y"/>
			<param name="c"/>
			<lvar name="teste" count="5"/>
		</function>
		<function name="imprime_tab" access="auto" jdoc="null">
			<comm cntt="variaveis para contar"/>
			<comm cntt="armazena quantas posi��es do tabuleiro ainda est�o vazias"/>
			<comm cntt="esta se existe posi��o vazia no tabuleiro, se sim incrementa em teste"/>
			<comm cntt="retorna o valor de teste para a fun��o jogar"/>
			<lvar name="contX" count="5"/>
			<lvar name="teste" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio3.c" sloc="50" jdoc="n">
	</C-File>
	<C-File name="Exercicio1.c" sloc="50" jdoc="n">
		<function name="lerVetor" access="auto" jdoc="null">
			<param name="vetor"/>
			<lvar name="x" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="tamanho" count="5"/>
			<lvar name="vetor" count="5"/>
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio2.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="tamanhoDaTurma" count="5"/>
			<lvar name="notas" count="5"/>
			<lvar name="media" count="5"/>
		</function>
	</C-File>
	<C-File name="Lista.c" sloc="50" jdoc="n">
		<comm cntt="cria um nome alternativo para int"/>
		<comm cntt="cria um pesudonome para Nodo, isso � um tipo"/>
		<comm cntt="tipo lista"/>
		<comm cntt="prototipo de constroiLista"/>
		<comm cntt="prototipo de destroiLista"/>
		<comm cntt="prototipo de busca_lista"/>
		<comm cntt="prototipo de insere_na_lista"/>
		<comm cntt="prototipo de apaga_da_lista"/>
		<comm cntt="prototipo de estahVazio"/>
		<comm cntt="prototipo de cabeca"/>
		<comm cntt="prototipo de imprimeLista"/>
		<GlobalVar name="elem_lista" access="auto" jdoc="eu"/>
		<struct name="Nodo" access="global" jdoc="null">
		<comm cntt="declara um estrutura de N� da lista: Nodo"/>
		<comm cntt="elemento da lista"/>
		<comm cntt="estrutura que vai apontar para o proximo elemento da lista"/>
		<comm cntt="estrutura que vai apontar para o elemento anterior da lista"/>
			<structMembers name="elem" count="50"/>
			<structMembers name="prox" count="50"/>
			<structMembers name="ant" count="50"/>
		</struct>
		<struct name="" access="global" jdoc="null">
		<comm cntt="estrutura de onde ser� criada a lista"/>
		<comm cntt="estrutura do tipo t_Nodo que contera a cabeca da lista"/>
			<structMembers name="cabeca" count="50"/>
		</struct>
		<GlobalVar name="constroiLista" access="auto" jdoc="eu"/>
		<GlobalVar name="destroiLista" access="auto" jdoc="eu"/>
		<GlobalVar name="busca_lista" access="auto" jdoc="eu"/>
		<GlobalVar name="insere_na_lista" access="auto" jdoc="eu"/>
		<GlobalVar name="elem_lista" access="auto" jdoc="eu"/>
		<GlobalVar name="estahVazio" access="auto" jdoc="eu"/>
		<GlobalVar name="elem_lista" access="auto" jdoc="eu"/>
		<GlobalVar name="imprimeLista" access="auto" jdoc="eu"/>
		<function name="main" access="auto" jdoc="null">
			<comm cntt="inicia o programa"/>
			<comm cntt="cria uma variavel ponteiro do tipo t_Nodo e aloca memoria pra ela, este � o ponteiro de inicio de toda a lista, pode-se dizer que ele � o &amp;quot;inicio de tudo&amp;quot;"/>
			<comm cntt="cria uma variavel ponteiro do tipo Lista e aloca memoria"/>
			<comm cntt="faz cabe�a da lista apontar para o endere�o da variavel nodoLista"/>
			<comm cntt="envia o endere�o de nodo para contruir a lista"/>
			<comm cntt="testa se a lista est� vazia"/>
			<comm cntt="insere na lista"/>
			<comm cntt="insere na lista"/>
			<comm cntt="insere na lista"/>
			<comm cntt="insere na lista"/>
			<comm cntt="insere na lista"/>
			<comm cntt="insere na lista"/>
			<comm cntt="chama a fun��o imprimir para imprimir a lista"/>
			<comm cntt="testa se a lista est� vazia"/>
			<comm cntt="tenta apagar um elemento inexistente da lista e retorna um erro"/>
			<comm cntt="retorna o elemento do topo da lista"/>
			<comm cntt="imprime a lista"/>
			<comm cntt="apaga o elemento 5 da lista"/>
			<comm cntt="apaga o elemento 6 da lista"/>
			<comm cntt="apaga o elemento 2 da lista"/>
			<comm cntt="imprime a lista atualizada sem os elementos que foram removidos"/>
			<comm cntt="insere o 7 na lista"/>
			<comm cntt="imprime a lista atualizada com o 7 inserido"/>
			<comm cntt="busca se o 3 est� na lista e retorna 1, verdadeiro, e 0 falso"/>
			<comm cntt="busca se o 6 est� na lista e retorna 1, verdadeiro, e 0 falso"/>
			<comm cntt="retorna e imprime a cabe�a da lista"/>
			<comm cntt="destroi a lista"/>
			<comm cntt="tenta imprimir a lista destruida"/>
			<comm cntt="obs: tentar imprimir a lisa destruida pode causar o travamento do programa em alguns computadores"/>
			<comm cntt="libera a memoria alocada para a lista"/>
			<comm cntt="libera a memoria alocada para o nodo da lista"/>
			<param name=""/>
			<lvar name="t_Nodo" count="5"/>
			<lvar name="Lista" count="5"/>
		</function>
		<function name="constroiLista" access="auto" jdoc="null">
			<comm cntt="fun��o que controi a lista, recebe a referencia para a lista criada no main"/>
			<comm cntt="faz a estrutura de proximo elemento da cabe�a da lista(prox) apontar para NULL,"/>
			<comm cntt="faz a estrutura de elemento anterior da cabe�a da lista(ant) apontar para NULL,"/>
			<comm cntt="Ou seja a lista esta vazia"/>
			<param name="l"/>
		</function>
		<function name="destroiLista" access="auto" jdoc="null">
			<comm cntt="cria um variavel que aponta para a cabe�a da lista ou seja, para o inicio"/>
			<comm cntt="percorre a lista desde o inicio at� o final da lista"/>
			<comm cntt="libera a memoria do elemento anterior da lista"/>
			<comm cntt="testa se a lista j� chegou ao final, se sim ele libera a memoria armazenda para a variavel inicio"/>
			<comm cntt="libera a memoria de inicio"/>
			<comm cntt="quebra o loop"/>
			<comm cntt="faz inicio apontar sempre para a proxima estrutura, ou seja o proximo elemento da lista"/>
			<comm cntt="conclui a destrui��o fazendo o prox apontar para NULL"/>
			<comm cntt="conclui a destrui��o fazendo o ant apontar para NULL"/>
			<param name="l"/>
			<lvar name="t_Nodo" count="5"/>
		</function>
		<function name="busca_lista" access="auto" jdoc="null">
			<comm cntt="fun��o que busca na lista, recebe uma lista e um elemento a ser buscado na lista"/>
			<comm cntt="que uma variavel ponteiro que aponta para a cabe�a da lista ou seja, o inicio"/>
			<comm cntt="percorre do inicio da lista at� quando ela for NULL"/>
			<comm cntt="testa se o elemento passado, k est� na lista"/>
			<comm cntt="quebra o loop"/>
			<comm cntt="faz a lista apontar para o proximo elemento sa o elemento da lista n�o for igual a k"/>
			<comm cntt="se k n�o estiver na lista a lista, inicio apontara para NULL, ou seja se n�o existe k na lista ela � nula, e se existe ela � diferente de nula,"/>
			<comm cntt="retorna 1 se estiver na lista e 0 se n�o estiver na lista"/>
			<param name="l"/>
			<param name="k"/>
			<lvar name="t_Nodo" count="5"/>
		</function>
		<function name="insere_na_lista" access="auto" jdoc="null">
			<comm cntt="insere na lista, recebe de parametro a lista e o elemento a ser inserido"/>
			<comm cntt="declara um variavel ponteiro de tipo t_Nodo novo e temp"/>
			<comm cntt="aloca memoria para o novo elemento da lista"/>
			<comm cntt="testa se a memoria foi alocada corretamente"/>
			<comm cntt="encerra o programa inteiro se e memoria n�o tiver sido alocada corretamente"/>
			<comm cntt="coloca o elemento x no nodo novo"/>
			<comm cntt="faz temp apontar para o proximo elemento da lista"/>
			<comm cntt="faz a cabe�a apontar para o novo elemento"/>
			<comm cntt="faz o proximo elemento da lista apontar para o antigo elemento da cabe�a"/>
			<comm cntt="se temp for NULL, ent�o a lista est� vazia"/>
			<comm cntt="se a lista est� vazia, o anterior do novo aponta para o anterior a ela, que nesse caso vai ser uma lista que possui elementos nulo, e n�o entra no calculo como um elemento incluso da lista, mas apenas funciona como a origem da lista, para est� lista, se este primeiro elemento n�o tivesse sido criado, n�o teria como adicionar novos elementos a lista"/>
			<comm cntt="retorna ao chamador"/>
			<comm cntt="faz o elemento da antiga cabe�a apontar para a nova cabe�a"/>
			<comm cntt="faz o novo elemento apontar para o proximo elemento da lista"/>
			<param name="l"/>
			<param name="x"/>
			<lvar name="t_Nodo" count="5"/>
		</function>
		<function name="apaga_da_lista" access="auto" jdoc="null">
			<comm cntt="apaga um elemento da lista"/>
			<comm cntt="cria um ponteiro de nodo inicio e temp"/>
			<comm cntt="inicio aponta para a cabe�a da lista"/>
			<comm cntt="percorre a lista at� o fim"/>
			<comm cntt="se elemento da lista for igual a x, ent�o x esta na lista"/>
			<comm cntt="acaba com o loop"/>
			<comm cntt="aponta para o proximo elemento da lista"/>
			<comm cntt="se inicio for igual a NULL, � porque a lista foi pecorrida t� o fim e o elemento x n�o foi encontrado nela"/>
			<comm cntt="imprime uma mensagem de erro"/>
			<comm cntt="retorna um valor de erro que nada interfere no funcionamento do programa"/>
			<comm cntt="se x estiver na lista os codigos abaixo s�o execultados"/>
			<comm cntt="temp aponta para a posi��o onde x foi encontrado, mantendo assim o valor de x por equanto"/>
			<comm cntt="inicio aponta para o proximo elemento, agora inicio n�o tem mais o elemento igual a x"/>
			<comm cntt="faz o inicio conter uma referencia para o elemento anterior da lista"/>
			<comm cntt="faz o elemento anterior a x ter o referencia para o proximo elemento depois do que � igual a x"/>
			<comm cntt="libera a memoria armazenada para o elemento igual a x"/>
			<comm cntt="retorna o elemento que foi removido, que era igual a x"/>
			<param name="l"/>
			<param name="x"/>
			<lvar name="t_Nodo" count="5"/>
		</function>
		<function name="estahVazio" access="auto" jdoc="null">
			<comm cntt="testa se est� vazia"/>
			<comm cntt="se a lista for NULL ela est� vazia"/>
			<comm cntt="retorna 1, verdadeiro"/>
			<comm cntt="se a cabe�a da lista for NULL, a lista tamb�m est� vazia"/>
			<comm cntt="retorna 1, vardadeiro"/>
			<comm cntt="se o proximo elemento da cabe�a for NULL a lista tamb�m est� vazia, n�o se esque�a que por padr�o esta lista possui um elemento que � anterior a cabe�a, esse elemento � o inicio desta lista e sem ele a lista n�o funciona, se esse inicio de tudo n�o aponta para o proximo elemento da lista ent�o a lista est� vazia"/>
			<comm cntt="retorna 1, verdadeiro"/>
			<comm cntt="se n�o tiver vazia ela retorna 0"/>
			<param name="l"/>
		</function>
		<function name="cabeca" access="auto" jdoc="null">
			<comm cntt="retorna o elemento da cabe�a"/>
			<comm cntt="retorna o elemento da cabe�a, que � na verdade o proximo elemento do inicio de tudo"/>
			<param name="l"/>
		</function>
		<function name="imprimeLista" access="auto" jdoc="null">
			<comm cntt="imprime a lista"/>
			<comm cntt="aponta para o primeiro elemento da lista que � o proximo elemento do inicio de tudo"/>
			<comm cntt="contador"/>
			<comm cntt="enquanto existir elementos na lista ele continua percorrendo"/>
			<comm cntt="imprinme o elemento da lista"/>
			<comm cntt="aponta para o proximo elemento"/>
			<comm cntt="incrementa 1 ao contador"/>
			<param name="l"/>
			<lvar name="t_Nodo" count="5"/>
			<lvar name="cont" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio3.c" sloc="50" jdoc="n">
		<function name="delta" access="auto" jdoc="null">
			<param name="a"/>
			<param name="b"/>
			<param name="c"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="a" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio1.c" sloc="50" jdoc="n">
		<function name="teste" access="auto" jdoc="null">
			<param name="num"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="num" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio4.c" sloc="50" jdoc="n">
		<function name="delta" access="auto" jdoc="null">
			<param name="a"/>
			<param name="b"/>
			<param name="c"/>
		</function>
		<function name="raiz" access="auto" jdoc="null">
			<param name="b"/>
			<param name="delt"/>
			<lvar name="x1" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="a" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio2.c" sloc="50" jdoc="n">
		<function name="teste" access="auto" jdoc="null">
			<param name="num"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="num" count="5"/>
		</function>
	</C-File>
	<C-File name="Fila.c" sloc="50" jdoc="n">
		<comm cntt="define o pseudonome para int"/>
		<comm cntt="prototipo da fun��o construirFila"/>
		<comm cntt="prototipo da fun��o destruirFila"/>
		<comm cntt="prototipo da fun��o enfileirar"/>
		<comm cntt="prototipo da fun��o desenfileirar"/>
		<comm cntt="prototipo da fun��o estahVazio"/>
		<comm cntt="prototipo da fun��o cabeca"/>
		<comm cntt="prototipo da fun��o cauda"/>
		<comm cntt="prototipo da fun��o imprimeFila"/>
		<GlobalVar name="elem_fila" access="auto" jdoc="eu"/>
		<struct name="" access="global" jdoc="null">
		<comm cntt="estrutura da fila"/>
		<comm cntt="contera o indice da cabe�a da fila"/>
		<comm cntt="contera o indice para a calda da fila"/>
		<comm cntt="ponteiro do tipo int, onde ser� armazenado o elemento da lista"/>
		<comm cntt="tamanho maximo da lista"/>
			<structMembers name="cabeca" count="50"/>
			<structMembers name="cauda" count="50"/>
			<structMembers name="elementos" count="50"/>
			<structMembers name="tam_max" count="50"/>
		</struct>
		<GlobalVar name="construirFila" access="auto" jdoc="eu"/>
		<GlobalVar name="destruirFila" access="auto" jdoc="eu"/>
		<GlobalVar name="enfileirar" access="auto" jdoc="eu"/>
		<GlobalVar name="elem_fila" access="auto" jdoc="eu"/>
		<GlobalVar name="estahVazio" access="auto" jdoc="eu"/>
		<GlobalVar name="elem_fila" access="auto" jdoc="eu"/>
		<GlobalVar name="elem_fila" access="auto" jdoc="eu"/>
		<GlobalVar name="imprimeFila" access="auto" jdoc="eu"/>
		<function name="main" access="auto" jdoc="null">
			<comm cntt="inicia o programa"/>
			<comm cntt="de clara uma fila que � um ponteiro do tipo Fila"/>
			<comm cntt="aloca memoria para a fila"/>
			<comm cntt="constroi a fila, e passa como paramero a fila e o valor do tamanho max"/>
			<comm cntt="imprime 1 se a fila esta vazia e 0 se n�o"/>
			<comm cntt="adiciona 556 a lista"/>
			<comm cntt="adiciona 56 a lista"/>
			<comm cntt="imprime a lista"/>
			<comm cntt="imprime 1 se a fila esta vazia e 0 se n�o"/>
			<comm cntt="adiciona 576 a lista"/>
			<comm cntt="adiciona 526 a lista"/>
			<comm cntt="adiciona 5556 a lista"/>
			<comm cntt="adiciona 5126 a lista"/>
			<comm cntt="adiciona 5096 a lista"/>
			<comm cntt="adiciona 5006 a lista"/>
			<comm cntt="adiciona 5786 a lista"/>
			<comm cntt="adiciona 50096 a lista"/>
			<comm cntt="imprime a fila"/>
			<comm cntt="adiciona 56626 a lista"/>
			<comm cntt="adiciona 56674006 a lista"/>
			<comm cntt="imprime a fila"/>
			<comm cntt="remove o elemento da cabe�a"/>
			<comm cntt="imprime a lista"/>
			<comm cntt="remove o elemento da cabe�a"/>
			<comm cntt="remove o elemento da cabe�a"/>
			<comm cntt="remove o elemento da cabe�a"/>
			<comm cntt="remove o elemento da cabe�a"/>
			<comm cntt="remove o elemento da cabe�a"/>
			<comm cntt="imprime a lista"/>
			<comm cntt="imprime apenas o elemento da cabe�a"/>
			<comm cntt="imprime apenas o elemento da calda"/>
			<comm cntt="destroi a fila"/>
			<comm cntt="tenta imprimir a fila destruida"/>
			<param name=""/>
			<lvar name="Fila" count="5"/>
		</function>
		<function name="construirFila" access="auto" jdoc="null">
			<comm cntt="coloca na fila, f-&amp;gt;tam_max o valor de tam_max passado por parametro, obs: f-&amp;gt;tam_max e tam_max s�o variaveis diferentes pois uma est� dentro da fila e uma n�o interfere na outra"/>
			<comm cntt="faz cauda = -1, siginifica que a fila est� vazia"/>
			<comm cntt="faz cabe�a = -1, siginifica que a fila est� vazia"/>
			<comm cntt="aloca memoria para o primeiro elemento da fila"/>
			<param name="f"/>
			<param name="tam_max"/>
		</function>
		<function name="destruirFila" access="auto" jdoc="null">
			<comm cntt="recebe uma fila que pode estar cheia ou n�o e a destroi"/>
			<comm cntt="zera a cabe�a da fila"/>
			<comm cntt="zera o total de elementos da fila"/>
			<comm cntt="zera o tamanho max, fazendo que a lista n�o tenha mais elementos"/>
			<comm cntt="libera a memoria armazenada para os elementos"/>
			<comm cntt="libera a memoria alocada para a fila"/>
			<param name="f"/>
		</function>
		<function name="enfileirar" access="auto" jdoc="null">
			<comm cntt="adiciona um elemento a cabe�a da fila"/>
			<comm cntt="testa se a cabe�a � menor que zero, se sim, ela � = a -1, logo ela est� vazia, como se quer inserir um elemento, e lista tem que apontar agora para o indice do primeiro elemento, que � indice 1 = 0"/>
			<comm cntt="adiciona um a cabe�a que era -1 e agora pa�a a ser 0"/>
			<comm cntt="testa se a fila esta cheia, como o ultimo elemento da lista � sempre tam_max - 1, ent�o se cauda for igual a tam_max - 1, a fila est� cheia e n�o se pode inserir mais elemento"/>
			<comm cntt="retorna para o local que chamou"/>
			<comm cntt="se a lista n�o tiver cheia, as linha abaixo s�o execultadas"/>
			<comm cntt="incrementa um a calda"/>
			<comm cntt="adicona o elemento no final da fila"/>
			<param name="f"/>
			<param name="elem"/>
		</function>
		<function name="desenfileirar" access="auto" jdoc="null">
			<comm cntt="variavel de contador"/>
			<comm cntt="loop para percorrer de 0 at� a calda"/>
			<comm cntt="remove da cabe�a e adiciona a cabe�a o elemento que vem na sequencia, assim cada elementos avan�a uma casa para frente"/>
			<comm cntt="como todos os elementos avan�aram uma posi��o quando o antigo elemeto da cabe�a saio, ent�o a posi��o que pertencia a calda deve ser esvaziada, ou sej� igualar a 0"/>
			<comm cntt="decrementa um elemento no total que existe na calda"/>
			<param name="f"/>
			<lvar name="cont" count="5"/>
		</function>
		<function name="estahVazio" access="auto" jdoc="null">
			<comm cntt="testa se est� vazio"/>
			<comm cntt="retorna 1 verdadeiro 0 falso"/>
			<param name="f"/>
		</function>
		<function name="cabeca" access="auto" jdoc="null">
			<comm cntt="retorna o elemento da cabe�a da fila"/>
			<comm cntt="retorna o elemento da cabe�a da fila"/>
			<param name="f"/>
		</function>
		<function name="cauda" access="auto" jdoc="null">
			<comm cntt="retorna o elemento da calda da fila"/>
			<comm cntt="retorna o elemento da calda da fila"/>
			<param name="f"/>
		</function>
		<function name="imprimeFila" access="auto" jdoc="null">
			<comm cntt="imprime a fila"/>
			<comm cntt="contador"/>
			<comm cntt="contador vai do inicio ao tam_max da fila"/>
			<comm cntt="imprime a posi��o do elemento e o elemento"/>
			<param name="f"/>
			<lvar name="cont" count="5"/>
		</function>
	</C-File>
	<C-File name="Pilhaestruradedados.c" sloc="50" jdoc="n">
		<comm cntt="tipo pilha"/>
		<comm cntt="prototipo da função que inicializa a pilha"/>
		<comm cntt="prototipo da função que libera os elementos da pilha"/>
		<comm cntt="prototipo da função que remove um elemento da pilha"/>
		<comm cntt="prototipo da função que adciona um elemento da pilha"/>
		<comm cntt="prototipo da função que testa se a pilha esta vazia ou cheia"/>
		<comm cntt="prototipo da função que retorna o elemento do topo da pilha"/>
		<comm cntt="prototipo da função que imprime a pilha"/>
		<struct name="" access="global" jdoc="null">
		<comm cntt="declara struct da pilha"/>
		<comm cntt="guarda tamanho maximo da pilha"/>
		<comm cntt="posição do elemento do topo da pilha"/>
		<comm cntt="tipo de elementos da pilha"/>
			<structMembers name="tamMax" count="50"/>
			<structMembers name="top" count="50"/>
			<structMembers name="elementos" count="50"/>
		</struct>
		<GlobalVar name="initPilha" access="auto" jdoc="eu"/>
		<GlobalVar name="freePilha" access="auto" jdoc="eu"/>
		<GlobalVar name="pop" access="auto" jdoc="eu"/>
		<GlobalVar name="push" access="auto" jdoc="eu"/>
		<GlobalVar name="empty" access="auto" jdoc="eu"/>
		<GlobalVar name="peek" access="auto" jdoc="eu"/>
		<GlobalVar name="imprimePilha" access="auto" jdoc="eu"/>
		<function name="main" access="auto" jdoc="null">
			<comm cntt="declara e aloca memoria para uma pilha"/>
			<comm cntt="inicializa a pilha"/>
			<comm cntt="imprime 1 se vazia e 0 se tiver elementos na pilha"/>
			<comm cntt="imprime os elementos da pilha"/>
			<comm cntt="insere &amp;apos;a&amp;apos; na pilha"/>
			<comm cntt="insere &amp;apos;b&amp;apos; na pilha"/>
			<comm cntt="imprime 1 se vazia e 0 se tiver elementos na pilha"/>
			<comm cntt="imprime a pilha"/>
			<comm cntt="insere &amp;apos;c&amp;apos; na pilha"/>
			<comm cntt="insere &amp;apos;d&amp;apos; na pilha"/>
			<comm cntt="insere &amp;apos;e&amp;apos; na pilha"/>
			<comm cntt="tenta inserir &amp;apos;f&amp;apos; na pilha, como a pilha agora esta cheia, a função aviza que a pilha esta cheia"/>
			<comm cntt="imprime a pilha"/>
			<comm cntt="remove o ultimo elemento da pilha"/>
			<comm cntt="imprime a pilha"/>
			<comm cntt="remove o ultimo elemento da pilha"/>
			<comm cntt="imprime a pilha"/>
			<comm cntt="libera a memoria alocada para os elementos da pilha"/>
			<comm cntt="tenta imprimir os elementos inexistentes da pilha"/>
			<comm cntt="tenta forçar a impressao de um elementos que já não existe na pilha"/>
			<comm cntt="libera definitivamente a memoria alocada para o ponteiro pilha"/>
			<param name=""/>
			<lvar name="Pilha" count="5"/>
		</function>
		<function name="initPilha" access="auto" jdoc="null">
			<comm cntt="cria a funcão que inicializa a pilha"/>
			<comm cntt="adiciona tamMax a tamMax da pilha"/>
			<comm cntt="esvazia a pilha"/>
			<comm cntt="aloca tamMax vez tamanho de char para elementos da pilha"/>
			<comm cntt="elementos da pilha aponta para a memora alocada"/>
			<param name="p"/>
			<param name="tamMax"/>
			<lvar name="conteudo" count="5"/>
		</function>
		<function name="freePilha" access="auto" jdoc="null">
			<comm cntt="cria a função que libera a memoria dos elementos da pilha"/>
			<comm cntt="esvazia o total de elementos ja na pilha"/>
			<comm cntt="esvazia o tamanho da pilha"/>
			<comm cntt="libera a memoria dos elementos da pilha"/>
			<param name="p"/>
		</function>
		<function name="pop" access="auto" jdoc="null">
			<comm cntt="cria a função que remove um elemento da pilha e o retorna"/>
			<comm cntt="cria temp e o adciona o elemento no topo da pilha"/>
			<comm cntt="deleta o elemento do topo"/>
			<comm cntt="deminui o total de elementos na pilha"/>
			<comm cntt="retorna o elemento removido"/>
			<param name="p"/>
			<lvar name="temp" count="5"/>
		</function>
		<function name="push" access="auto" jdoc="null">
			<comm cntt="cria função que adicina um elemento a pilha"/>
			<comm cntt="incrementa 1 no tamanho d pilha"/>
			<comm cntt="testa se a pilha esta cheia"/>
			<comm cntt="top deve empre ser menor que tamMax"/>
			<comm cntt="retorna ao chamador"/>
			<comm cntt="adiciona na pilha o valor passado como parametro"/>
			<param name="p"/>
			<param name="elem"/>
		</function>
		<function name="empty" access="auto" jdoc="null">
			<comm cntt="cria função que testa se a pilha esta vazia"/>
			<comm cntt="testa se a pilha esta vazia e retorna: 1 true, 0 false"/>
			<param name="p"/>
		</function>
		<function name="peek" access="auto" jdoc="null">
			<comm cntt="cria função que retorna o valor do topo da pilha"/>
			<comm cntt="se a pilha estiver vazia, encerra o programa"/>
			<comm cntt="se não retorna o valor do topo"/>
			<param name="p"/>
		</function>
		<function name="imprimePilha" access="auto" jdoc="null">
			<comm cntt="cria função que imprime a pilha"/>
			<comm cntt="declara contadr"/>
			<comm cntt="percorre toda a pilha"/>
			<comm cntt="imprime um por um os elementos da pilha"/>
			<param name="p"/>
			<lvar name="cont" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio9.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="TVideo" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio14.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="notas" count="5"/>
			<lvar name="contLista" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio11.c" sloc="50" jdoc="n">
		<function name="fibbonaci" access="auto" jdoc="null">
			<param name="num"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="num" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio13.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="num" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio7.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="num" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio12.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="num" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio5.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="idade" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio10.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="num" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio3.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio8.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="linha" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio1.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="nome" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio6.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="dolar" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio4.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="base" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio2.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="game 2.0.c" sloc="50" jdoc="n">
		<function name="game" access="auto" jdoc="null">
			<lvar name="vida" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
		</function>
	</C-File>
	<C-File name="adivinhe meu numero.c" sloc="50" jdoc="n">
		<function name="digite" access="auto" jdoc="null">
			<lvar name="x" count="5"/>
		</function>
		<function name="denovo" access="auto" jdoc="null">
			<lvar name="x" count="5"/>
		</function>
		<function name="tente" access="auto" jdoc="null">
			<lvar name="a" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
		</function>
	</C-File>
	<C-File name="media.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="game.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<lvar name="vida" count="5"/>
		</function>
	</C-File>
	<C-File name="Sem Título1.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<lvar name="media" count="5"/>
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="ola.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="Fila.c" sloc="50" jdoc="n">
		<comm cntt="Insere um evento na lista"/>
		<comm cntt="Ve o que a na fila"/>
		<comm cntt="apaga um elemento da fila"/>
		<comm cntt="Armazena um evento"/>
		<comm cntt="Recupera um evento"/>
		<GlobalVar name="p" access="auto" jdoc="eu"/>
		<GlobalVar name="spos" access="auto" jdoc="eu"/>
		<GlobalVar name="rpos" access="auto" jdoc="eu"/>
		<GlobalVar name="enter" access="auto" jdoc="eu"/>
		<function name="main" access="auto" jdoc="null">
			<comm cntt="inicia a matriz com NULL"/>
			<param name=""/>
			<lvar name="s" count="5"/>
			<lvar name="t" count="5"/>
		</function>
		<function name="enter" access="auto" jdoc="null">
			<comm cntt="Nenhuma entrada"/>
			<param name=""/>
			<lvar name="s" count="5"/>
		</function>
		<function name="review" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="t" count="5"/>
		</function>
		<function name="delete" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="p" count="5"/>
		</function>
		<function name="qstore" access="auto" jdoc="null">
			<param name="q"/>
		</function>
		<function name="qretrieve" access="auto" jdoc="null">
			<param name=""/>
		</function>
	</C-File>
	<C-File name="exemplo excluindo um elemento da lista.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<comm cntt="declara anterior e novo como sendo ponteiros"/>
			<comm cntt="controla o elemento anterior e esta apontando ao inicio da lista"/>
			<comm cntt="faz abre2voltar ao inicio"/>
			<comm cntt="controna o no atual anterior e novo para inserir entre 5e7"/>
			<comm cntt="aponta para proximo"/>
			<comm cntt="aponta para proximo"/>
			<comm cntt="aloca memoria para o novo elemento"/>
			<comm cntt="atribue a novo-&amp;gt;tipo2 o valor de abre2"/>
			<comm cntt="atribue o valor de novo a anterior-&amp;gt;tipo"/>
			<comm cntt="insere o novo elemento na lista"/>
			<comm cntt="volta ao inicio"/>
			<comm cntt="percorre a lista"/>
			<comm cntt="imprime a nova lista"/>
			<comm cntt="aponta para proximo"/>
			<comm cntt="volta ao inicio"/>
			<comm cntt="volta ao inicio"/>
			<comm cntt="percorre a lista"/>
			<comm cntt="se a lista for igual a 7"/>
			<comm cntt="atribue abre2-&amp;gt;tipo2 a anterior-&amp;gt;tipo2"/>
			<comm cntt="libera a memoria alocada para 7na lista, o removendo"/>
			<comm cntt="para o laço"/>
			<comm cntt="esses dois apontam para proximo elementos"/>
			<comm cntt="volta ao inicio"/>
			<comm cntt="esse novo laço imprime a nova lista"/>
			<param name=""/>
			<struct name="tipo" access="global" jdoc="null">
				<structMembers name="arq" count="50"/>
				<structMembers name="tipo2" count="50"/>
			</struct>
		</function>
	</C-File>
	<C-File name="exemplo excluindo um de uma lista duvlamente encadeada.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<comm cntt="lista vazia;"/>
			<comm cntt="aponta para anterior"/>
			<comm cntt="aponta para o inicio da lista"/>
			<comm cntt="exibe a lista"/>
			<comm cntt="motra 10 somente uma vez"/>
			<comm cntt="volta ao inicio"/>
			<comm cntt="exibe a lista"/>
			<comm cntt="motra 10 somente uma vez"/>
			<param name=""/>
			<lvar name="nume" count="5"/>
			<struct name="lista" access="global" jdoc="null">
				<structMembers name="numero" count="50"/>
				<structMembers name="proximo" count="50"/>
				<structMembers name="anterior" count="50"/>
			</struct>
			<lvar name="encontrado" count="5"/>
		</function>
	</C-File>
	<C-File name="exemeplo de lista simplesmente encadeada.c" sloc="50" jdoc="n">
		<comm cntt="por calsa de malloc"/>
		<function name="main" access="auto" jdoc="null">
			<comm cntt="ponteiro para uma struct do tipo struct int"/>
			<comm cntt="significa lista vazia ou seja NULL"/>
			<comm cntt="faz o ponteiro da lista apontar para inicio ou vazia"/>
			<comm cntt="percorre em um laço de 2 em 2 e adciona o nume na lista"/>
			<comm cntt="aloca memoria para o novo elemento da lista"/>
			<comm cntt="faz abre2 apontar para o proximo elemento(tipo2)"/>
			<comm cntt="faz abre2 apontar para o membro(arq) que recebe o valor de nume"/>
			<comm cntt="faz a lista apontar para o final"/>
			<comm cntt="faz a lista voltar a o inicio para poder percorrela e imprimila"/>
			<comm cntt="percorre a lista em um laço while até chegar ao fim"/>
			<comm cntt="imprime cada elemento da lista"/>
			<comm cntt="aponta para o proximo elemento(tipo2) até o fim dela"/>
			<param name=""/>
			<struct name="tipo" access="global" jdoc="null">
		<comm cntt="struct tipo"/>
		<comm cntt="campo membro de struct tipo do tipo int"/>
		<comm cntt="ponteiro para o proximo elemento ele é do tipo struct tipo"/>
				<structMembers name="arq" count="50"/>
				<structMembers name="tipo2" count="50"/>
			</struct>
		</function>
	</C-File>
	<C-File name="binarios em lista.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<comm cntt="lista vazia;"/>
			<comm cntt="aponta para anterior"/>
			<comm cntt="aponta para o inicio da lista"/>
			<comm cntt="exibe a lista"/>
			<comm cntt="motra 10 somente uma vez"/>
			<param name=""/>
			<lvar name="nume" count="5"/>
			<struct name="lista" access="global" jdoc="null">
				<structMembers name="numero" count="50"/>
				<structMembers name="proximo" count="50"/>
				<structMembers name="anterior" count="50"/>
			</struct>
		</function>
	</C-File>
	<C-File name="exemplo de lista duplamente encadeada simples.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<comm cntt="lista vazia;"/>
			<comm cntt="aponta para anterior"/>
			<comm cntt="aponta para o inicio da lista"/>
			<comm cntt="exibe a lista"/>
			<comm cntt="motra 10 somente uma vez"/>
			<param name=""/>
			<lvar name="nume" count="5"/>
			<struct name="lista" access="global" jdoc="null">
				<structMembers name="numero" count="50"/>
				<structMembers name="proximo" count="50"/>
				<structMembers name="anterior" count="50"/>
			</struct>
		</function>
	</C-File>
	<C-File name="exemeplo de anexação de elemento na lista.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<comm cntt="inicia o programa"/>
			<comm cntt="cria uma variavel e um ponteiro de para inicio e o no da lista"/>
			<comm cntt="declara a lista como NULL ou seja ela esta vazia"/>
			<comm cntt="faz com que abre2 aponte em NULL ou seja indica lista vazia(inicio)"/>
			<comm cntt="usa um laço for para inserir elementos na lista"/>
			<comm cntt="alloca memoria dinamica para cada"/>
			<comm cntt="elemento da lista"/>
			<comm cntt="faz com que abre2(no) aponte para o proximo elemnto da lista"/>
			<comm cntt="faz com que abre2(no) aponte para arq que guarda o elemnto da lista"/>
			<comm cntt="quando nao existe mais elemnto a lista aponta em NULL(FIM)"/>
			<comm cntt="faz a lista apontar para o inicio"/>
			<comm cntt="executa um laço para poder imprimir cada elemnto da lista"/>
			<comm cntt="imprime o elemento da lista"/>
			<comm cntt="apobta para o proximo elemento da lista"/>
			<comm cntt="faz a lista voutar ao inicio"/>
			<comm cntt="percorre a lista em um laço while"/>
			<comm cntt="aponta sempre para o proximo elemento da lista"/>
			<comm cntt="insere um elemento no fim da lista"/>
			<comm cntt="aloca memoria para o novo elemnto"/>
			<comm cntt="aponta para o proximo elemnto"/>
			<comm cntt="insere um novo elemnto no fim da lista"/>
			<comm cntt="imprime o novo elemento"/>
			<comm cntt="aponta para NULL ou FIM da lista"/>
			<comm cntt="vouta ao inicio da lista"/>
			<comm cntt="percorre a lista em um laço"/>
			<comm cntt="imprime todos os elementos incluindo o novo."/>
			<comm cntt="aponta para o proximo elemento"/>
			<param name=""/>
			<struct name="tipo" access="global" jdoc="null">
		<comm cntt="cria uma struct do tipo (tipo)"/>
		<comm cntt="cria um membro da lista do tipo int da lista (tipo)"/>
		<comm cntt="cria um ponteiro para o proximo elemento da lista"/>
				<structMembers name="arq" count="50"/>
				<structMembers name="tipo2" count="50"/>
			</struct>
		</function>
	</C-File>
	<C-File name="inseri elemto no inicio.c" sloc="50" jdoc="n">
		<function name="inserirInicio" access="auto" jdoc="null">
			<param name="listaTotal"/>
			<param name="elemento"/>
		</function>
	</C-File>
	<C-File name="insere no elemto no final.c" sloc="50" jdoc="n">
		<function name="inserirFim" access="auto" jdoc="null">
			<comm cntt="Percorre a lista ateh encontrar o ultimo elemento"/>
			<param name="listaTotal"/>
			<param name="elemento"/>
			<lvar name="lista" count="5"/>
		</function>
	</C-File>
	<C-File name="libera a lista.c" sloc="50" jdoc="n">
		<function name="desturirLista" access="auto" jdoc="null">
			<param name="listaTotal"/>
			<lvar name="lista" count="5"/>
		</function>
	</C-File>
	<C-File name="busca elementos.c" sloc="50" jdoc="n">
		<function name="buscarElemento" access="auto" jdoc="null">
			<comm cntt="Percorre a lista ateh encontrar o no procurado, ou ateh o fim da lista"/>
			<comm cntt="Verifica se o no atual contem o valorProcurado"/>
			<comm cntt="encontrou o no procurado"/>
			<comm cntt="Se encontrou o no procurado, retorna o no"/>
			<comm cntt="Se nao encontrou, retorna NULL"/>
			<param name="listaTotal"/>
			<param name="valorProcurado"/>
			<lvar name="lista" count="5"/>
			<lvar name="encontrou" count="5"/>
		</function>
	</C-File>
	<C-File name="insere elemto no meio.c" sloc="50" jdoc="n">
		<function name="inserirMeio" access="auto" jdoc="null">
			<comm cntt="Percorre a lista ateh encontrar o no procurado"/>
			<comm cntt="Verifica se o no atual eh o no procurado"/>
			<comm cntt="O novo no sera inserido apos o no atual"/>
			<param name="listaTotal"/>
			<param name="elemento"/>
			<param name="info"/>
			<lvar name="lista" count="5"/>
			<lvar name="encontrou" count="5"/>
		</function>
	</C-File>
	<C-File name="cria elemento.c" sloc="50" jdoc="n">
		<function name="criarElemento" access="auto" jdoc="null">
			<param name="info"/>
			<lvar name="lista" count="5"/>
		</function>
	</C-File>
	<C-File name="remove um elemento da lista.c" sloc="50" jdoc="n">
		<function name="removerElemento" access="auto" jdoc="null">
			<comm cntt="Percorre a lista ateh encontrar o elemento (nó) procurado"/>
			<comm cntt="Encontrou o elemento (nó) procurado"/>
			<comm cntt="nao encontrou o elemento(nó). Avança ao proximo"/>
			<comm cntt="Verifica se o elemento (nó) encontrado eh o primeiro da lista"/>
			<comm cntt="Caso o elemento(nó) encontrado nao seja o primeiro da lista"/>
			<comm cntt="Libera a memoria alocada"/>
			<comm cntt="Retorna zero indicando que o elemento(no) nao foi encontrado"/>
			<param name="listaTotal"/>
			<param name="valorProcurado"/>
			<lvar name="lista" count="5"/>
			<lvar name="encontrou" count="5"/>
		</function>
	</C-File>
	<C-File name="exemplo inserindo um elemento detalhado na lista.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<comm cntt="as representaçoes anteriores sao declaradas normalmente como vc ja sabe"/>
			<comm cntt="as dua declaraçoes anteriores voltam ao inicio da lista"/>
			<comm cntt="esse laço controla onde deve ser inserido o novo elemento"/>
			<comm cntt="aponta para proximo"/>
			<comm cntt="aponta para proximo"/>
			<comm cntt="aloca memoria para o novo elemento"/>
			<comm cntt="nov aponta para proximo(tipo2) = a abre2"/>
			<comm cntt="faz anterior apontar para proximo(tipo2)= a novo"/>
			<comm cntt="insere o elemento 6 na lista antes do numero 7"/>
			<comm cntt="volta ao inicio"/>
			<comm cntt="percorre a lista"/>
			<comm cntt="imprime os elementos 1 por 1"/>
			<comm cntt="aponta para proximo"/>
			<param name=""/>
			<struct name="tipo" access="global" jdoc="null">
				<structMembers name="arq" count="50"/>
				<structMembers name="tipo2" count="50"/>
			</struct>
		</function>
	</C-File>
	<C-File name="usando calloc malloc e realloc.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="apt" count="5"/>
			<lvar name="a" count="5"/>
		</function>
	</C-File>
	<C-File name="usando __LINE.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
		</function>
	</C-File>
	<C-File name="Untitled2.c" sloc="50" jdoc="n">
	</C-File>
	<C-File name="Untitled1.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="usando #line.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
		</function>
	</C-File>
	<C-File name="testando asni.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
		</function>
	</C-File>
	<C-File name="teste condi.C" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
		</function>
	</C-File>
	<C-File name="produlto.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="exibindo um diretorio classificado.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<comm cntt="encontra a posição correta."/>
			<param name=""/>
			<struct name="lista_arq" access="global" jdoc="null">
				<structMembers name="nomearq" count="50"/>
				<structMembers name="proximo" count="50"/>
			</struct>
		</function>
	</C-File>
	<C-File name="adita.c" sloc="50" jdoc="n">
	</C-File>
	<C-File name="copia tipoabre em coptipoabre.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<struct name="tipo" access="global" jdoc="null">
				<structMembers name="tipoint" count="50"/>
				<structMembers name="tipofloat" count="50"/>
			</struct>
		</function>
	</C-File>
	<C-File name="inicializando strcuts.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<struct name="tipo" access="global" jdoc="null">
				<structMembers name="a" count="50"/>
			</struct>
		</function>
	</C-File>
	<C-File name="abre Exercicio11,8.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="abrem" count="5"/>
		</function>
	</C-File>
	<C-File name="Exercicio 11,16.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="rep" count="5"/>
		</function>
	</C-File>
	<C-File name="Exetcicio11,8.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="conta" count="5"/>
			<lvar name="nome" count="5"/>
			<lvar name="saldo" count="5"/>
		</function>
	</C-File>
	<C-File name="jogo da memoria.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="conta" count="5"/>
			<lvar name="senha_da_conta" count="5"/>
			<lvar name="opcao" count="5"/>
			<lvar name="opacao" count="5"/>
		</function>
	</C-File>
	<C-File name="abre cartas sgdggdg.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="letra" count="5"/>
		</function>
	</C-File>
	<C-File name="cri e imprime.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="tico" count="5"/>
		</function>
	</C-File>
	<C-File name="ticos.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
		</function>
	</C-File>
	<C-File name="abre tico.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="tico" count="5"/>
		</function>
	</C-File>
	<C-File name="cri eimprime.c" sloc="50" jdoc="n">
		<function name="cria" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="tico" count="5"/>
		</function>
	</C-File>
	<C-File name="txtts.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="digite" count="5"/>
		</function>
	</C-File>
	<C-File name="clientes.c" sloc="50" jdoc="n">
	</C-File>
	<C-File name="usando stdin, stdout.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="copia cartas em cartas2.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="arq" count="5"/>
		</function>
	</C-File>
	<C-File name="carta.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="carta" count="5"/>
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="tentaabri3.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="v" count="5"/>
			<lvar name="FILE" count="5"/>
			<lvar name="i" count="5"/>
		</function>
	</C-File>
	<C-File name="teste.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="usando FILE , fopen, w, fclose.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
		</function>
	</C-File>
	<C-File name="usando fputc.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
		</function>
	</C-File>
	<C-File name="usando putc, fputc e fprintf.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
		</function>
	</C-File>
	<C-File name="usando fprintf.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
		</function>
	</C-File>
	<C-File name="usando getc.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="le" count="5"/>
			<lvar name="FILE" count="5"/>
		</function>
	</C-File>
	<C-File name="usando putc.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
		</function>
	</C-File>
	<C-File name="deretorios.c" sloc="50" jdoc="n">
		<comm cntt="Cria um arquivo seqüencial"/>
		<function name="main" access="auto" jdoc="null">
			<lvar name="conta" count="5"/>
			<lvar name="nome" count="5"/>
			<lvar name="saldo" count="5"/>
			<lvar name="FILE" count="5"/>
		</function>
	</C-File>
	<C-File name="xria binario.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="i" count="5"/>
		</function>
	</C-File>
	<C-File name="cria binario.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="v" count="5"/>
			<lvar name="x" count="5"/>
			<lvar name="n" count="5"/>
		</function>
	</C-File>
	<C-File name="testa binario.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="v" count="5"/>
			<lvar name="FILE" count="5"/>
			<lvar name="i" count="5"/>
		</function>
	</C-File>
	<C-File name="binario.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="FILE" count="5"/>
			<lvar name="ab" count="5"/>
		</function>
	</C-File>
	<C-File name="matriz muitibitridimencional.c" sloc="50" jdoc="n">
		<function name="exibe_2d_matriz" access="auto" jdoc="null">
			<param name="matriz"/>
			<param name="linhas"/>
			<lvar name="i" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="a" count="5"/>
			<lvar name="b" count="5"/>
			<lvar name="c" count="5"/>
		</function>
	</C-File>
	<C-File name="&array.c" sloc="50" jdoc="n">
	</C-File>
	<C-File name="Sem Título2.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<lvar name="valor" count="5"/>
		</function>
	</C-File>
	<C-File name="array complexo.c" sloc="50" jdoc="n">
		<function name="main" access="auto" jdoc="null">
			<lvar name="valor" count="5"/>
		</function>
	</C-File>
	<C-File name="&arraydos supremosarrays.c" sloc="50" jdoc="n">
		<function name="exibe_matriz" access="auto" jdoc="null">
			<param name="valores"/>
			<param name="numero_elementos"/>
			<lvar name="i" count="5"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="notas" count="5"/>
			<lvar name="conta" count="5"/>
			<lvar name="pequeno" count="5"/>
		</function>
	</C-File>
	<C-File name="array static.c" sloc="50" jdoc="n">
		<GlobalVar name="staticArraylnit" access="auto" jdoc="eu"/>
		<GlobalVar name="automaticArraylnit" access="auto" jdoc="eu"/>
		<function name="main" access="auto" jdoc="null">
		</function>
		<function name="staticArraylnit" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="a" count="5"/>
			<lvar name="i" count="5"/>
		</function>
		<function name="automaticArraylnit" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="a" count="5"/>
			<lvar name="i" count="5"/>
		</function>
	</C-File>
	<C-File name="MENU.h" sloc="50" jdoc="n">
		<GlobalVar name="menu" access="auto" jdoc="eu"/>
		<GlobalVar name="botoes" access="auto" jdoc="eu"/>
		<GlobalVar name="botoes2" access="auto" jdoc="eu"/>
		<GlobalVar name="chamaclick" access="auto" jdoc="eu"/>
		<GlobalVar name="ladrilhos" access="auto" jdoc="eu"/>
		<function name="ladrilhos" access="auto" jdoc="null">
			<param name=""/>
			<lvar name="linhas" count="5"/>
		</function>
		<function name="menu" access="auto" jdoc="null">
			<param name=""/>
		</function>
		<function name="botoes" access="auto" jdoc="null">
			<param name="tecla"/>
			<param name="resultado"/>
		</function>
		<function name="botoes2" access="auto" jdoc="null">
			<param name="tecla"/>
			<param name="resultado"/>
			<param name="x"/>
			<param name="y"/>
		</function>
		<function name="chamaclick" access="auto" jdoc="null">
			<param name="x"/>
			<param name="y"/>
			<lvar name="resultado" count="5"/>
			<lvar name="tecla" count="5"/>
		</function>
	</C-File>
	<C-File name="exercicio3.c" sloc="50" jdoc="n">
		<comm cntt="Implemente a fun��o imprime_endereco(int num) que recebe um inteiro e imprime o endere�o de mem�ria de num. Para testar a fun��o, imprima (usando printf) o endere�o de uma vari�vel inteira �a�, em seguida, chame a fun��o imprime_endereco passando �a� como par�metro. Os endere�os impressos foram iguais? Por qu�?"/>
		<comm cntt="diferente porque soimente o que foi parassado para a fun��o foiuma copia do valor de num"/>
		<function name="imprime_endereco" access="auto" jdoc="null">
			<param name="num"/>
		</function>
		<function name="main" access="auto" jdoc="null">
			<comm cntt="diferente porque soimente o que foi parassado para a fun��o foiuma copia do valor de num"/>
			<param name=""/>
			<lvar name="num" count="5"/>
		</function>
	</C-File>
	<C-File name="Lista.c" sloc="50" jdoc="n">
		<comm cntt="comentario de linha"/>
		<comm cntt="este é um commentario ue pode se estender por varias linhas"/>
		<comm cntt="cria um nome alternativo para int"/>
		<comm cntt="variavel statica"/>
		<comm cntt="cria um pesudonome para Nodo, isso � um tipo"/>
		<comm cntt="tipo lista"/>
		<comm cntt="enums"/>
		<comm cntt="prototipo de constroiLista"/>
		<comm cntt="prototipo de destroiLista"/>
		<comm cntt="prototipo de busca_lista"/>
		<comm cntt="prototipo de insere_na_lista"/>
		<comm cntt="prototipo de apaga_da_lista"/>
		<comm cntt="prototipo de estahVazio"/>
		<comm cntt="prototipo de cabeca"/>
		<comm cntt="prototipo de imprimeLista"/>
		<comm cntt="este commentario ta no meiod de definições"/>
		<comm cntt="fim de main"/>
		<comm cntt="comentario depois de main"/>
		<comm cntt="este comentario ocupa 3 linha - 1 2 3"/>
		<comm cntt="este comentario esta no fim"/>
		<GlobalVar name="elem_lista" access="auto" jdoc="eu"/>
		<GlobalVar name="variavelstatic" access="static" jdoc="eu"/>
		<struct name="Nodo" access="global" jdoc="null">
		<comm cntt="declara um estrutura de N� da lista: Nodo"/>
		<comm cntt="elemento da lista"/>
		<comm cntt="estrutura que vai apontar para o proximo elemento da lista"/>
		<comm cntt="estrutura que vai apontar para o elemento anterior da lista"/>
			<structMembers name="elem" count="50"/>
			<structMembers name="prox" count="50"/>
			<structMembers name="ant" count="50"/>
		</struct>
		<struct name="" access="global" jdoc="null">
		<comm cntt="estrutura de onde será criada a lista"/>
		<comm cntt="estrutura do tipo t_Nodo que contera a cabeca da lista"/>
			<structMembers name="cabeca" count="50"/>
		</struct>
		<enum name="colors" sloc="50" jdoc="null">
		<comm cntt="enum"/>
			<const name="black" access="Não disponivel" jdoc=""/>
			<const name="blue" access="Não disponivel" jdoc=""/>
			<const name="green" access="Não disponivel" jdoc=""/>
			<const name="cyan" access="Não disponivel" jdoc=""/>
			<const name="red" access="Não disponivel" jdoc=""/>
			<const name="purple" access="Não disponivel" jdoc=""/>
			<const name="yellow" access="Não disponivel" jdoc=""/>
			<const name="white" access="Não disponivel" jdoc=""/>
		</enum>
		<GlobalVar name="constroiLista" access="auto" jdoc="eu"/>
		<GlobalVar name="destroiLista" access="auto" jdoc="eu"/>
		<GlobalVar name="busca_lista" access="auto" jdoc="eu"/>
		<GlobalVar name="insere_na_lista" access="auto" jdoc="eu"/>
		<GlobalVar name="elem_lista" access="auto" jdoc="eu"/>
		<GlobalVar name="estahVazio" access="auto" jdoc="eu"/>
		<GlobalVar name="elem_lista" access="auto" jdoc="eu"/>
		<GlobalVar name="imprimeLista" access="auto" jdoc="eu"/>
		<function name="fun" access="static" jdoc="null">
		</function>
		<function name="main" access="auto" jdoc="null">
			<comm cntt="inicia o programa"/>
			<comm cntt="cria uma variavel ponteiro do tipo t_Nodo e aloca memoria pra ela, este � o ponteiro de inicio de toda a lista, pode-se dizer que ele � o &amp;quot;inicio de tudo&amp;quot;"/>
			<comm cntt="cria uma variavel ponteiro do tipo Lista e aloca memoria"/>
			<comm cntt="faz cabe�a da lista apontar para o endere�o da variavel nodoLista"/>
			<comm cntt="envia o endere�o de nodo para contruir a lista"/>
			<comm cntt="testa se a lista est� vazia"/>
			<comm cntt="insere na lista"/>
			<comm cntt="insere na lista"/>
			<comm cntt="insere na lista"/>
			<comm cntt="insere na lista"/>
			<comm cntt="insere na lista"/>
			<comm cntt="insere na lista"/>
			<comm cntt="chama a fun��o imprimir para imprimir a lista"/>
			<comm cntt="testa se a lista est� vazia"/>
			<comm cntt="tenta apagar um elemento inexistente da lista e retorna um erro"/>
			<comm cntt="retorna o elemento do topo da lista"/>
			<comm cntt="imprime a lista"/>
			<comm cntt="apaga o elemento 5 da lista"/>
			<comm cntt="apaga o elemento 6 da lista"/>
			<comm cntt="apaga o elemento 2 da lista"/>
			<comm cntt="imprime a lista atualizada sem os elementos que foram removidos"/>
			<comm cntt="insere o 7 na lista"/>
			<comm cntt="imprime a lista atualizada com o 7 inserido"/>
			<comm cntt="busca se o 3 est� na lista e retorna 1, verdadeiro, e 0 falso"/>
			<comm cntt="busca se o 6 est� na lista e retorna 1, verdadeiro, e 0 falso"/>
			<comm cntt="retorna e imprime a cabe�a da lista"/>
			<comm cntt="destroi a lista"/>
			<comm cntt="tenta imprimir a lista destruida"/>
			<comm cntt="obs: tentar imprimir a lisa destruida pode causar o travamento do programa em alguns computadores"/>
			<comm cntt="libera a memoria alocada para a lista"/>
			<comm cntt="libera a memoria alocada para o nodo da lista"/>
			<param name="x"/>
			<param name="y"/>
			<param name="z"/>
			<param name="a"/>
			<lvar name="t_Nodo" count="5"/>
			<lvar name="Lista" count="5"/>
		</function>
		<function name="constroiLista" access="auto" jdoc="null">
			<comm cntt="fun��o que controi a lista, recebe a referencia para a lista criada no main"/>
			<comm cntt="faz a estrutura de proximo elemento da cabe�a da lista(prox) apontar para NULL,"/>
			<comm cntt="faz a estrutura de elemento anterior da cabe�a da lista(ant) apontar para NULL,"/>
			<comm cntt="Ou seja a lista esta vazia"/>
			<param name="l"/>
		</function>
		<function name="destroiLista" access="auto" jdoc="null">
			<comm cntt="cria um variavel que aponta para a cabe�a da lista ou seja, para o inicio"/>
			<comm cntt="percorre a lista desde o inicio at� o final da lista"/>
			<comm cntt="libera a memoria do elemento anterior da lista"/>
			<comm cntt="testa se a lista j� chegou ao final, se sim ele libera a memoria armazenda para a variavel inicio"/>
			<comm cntt="libera a memoria de inicio"/>
			<comm cntt="quebra o loop"/>
			<comm cntt="faz inicio apontar sempre para a proxima estrutura, ou seja o proximo elemento da lista"/>
			<comm cntt="conclui a destrui��o fazendo o prox apontar para NULL"/>
			<comm cntt="conclui a destrui��o fazendo o ant apontar para NULL"/>
			<param name="l"/>
			<lvar name="t_Nodo" count="5"/>
		</function>
		<function name="busca_lista" access="auto" jdoc="null">
			<comm cntt="fun��o que busca na lista, recebe uma lista e um elemento a ser buscado na lista"/>
			<comm cntt="que uma variavel ponteiro que aponta para a cabe�a da lista ou seja, o inicio"/>
			<comm cntt="percorre do inicio da lista at� quando ela for NULL"/>
			<comm cntt="testa se o elemento passado, k est� na lista"/>
			<comm cntt="quebra o loop"/>
			<comm cntt="faz a lista apontar para o proximo elemento sa o elemento da lista n�o for igual a k"/>
			<comm cntt="se k n�o estiver na lista a lista, inicio apontara para NULL, ou seja se n�o existe k na lista ela � nula, e se existe ela � diferente de nula,"/>
			<comm cntt="retorna 1 se estiver na lista e 0 se n�o estiver na lista"/>
			<param name="l"/>
			<param name="k"/>
			<lvar name="t_Nodo" count="5"/>
		</function>
		<function name="insere_na_lista" access="auto" jdoc="null">
			<comm cntt="insere na lista, recebe de parametro a lista e o elemento a ser inserido"/>
			<comm cntt="declara um variavel ponteiro de tipo t_Nodo novo e temp"/>
			<comm cntt="aloca memoria para o novo elemento da lista"/>
			<comm cntt="testa se a memoria foi alocada corretamente"/>
			<comm cntt="encerra o programa inteiro se e memoria n�o tiver sido alocada corretamente"/>
			<comm cntt="coloca o elemento x no nodo novo"/>
			<comm cntt="faz temp apontar para o proximo elemento da lista"/>
			<comm cntt="faz a cabe�a apontar para o novo elemento"/>
			<comm cntt="faz o proximo elemento da lista apontar para o antigo elemento da cabe�a"/>
			<comm cntt="se temp for NULL, ent�o a lista est� vazia"/>
			<comm cntt="se a lista est� vazia, o anterior do novo aponta para o anterior a ela, que nesse caso vai ser uma lista que possui elementos nulo, e n�o entra no calculo como um elemento incluso da lista, mas apenas funciona como a origem da lista, para est� lista, se este primeiro elemento n�o tivesse sido criado, n�o teria como adicionar novos elementos a lista"/>
			<comm cntt="retorna ao chamador"/>
			<comm cntt="faz o elemento da antiga cabe�a apontar para a nova cabe�a"/>
			<comm cntt="faz o novo elemento apontar para o proximo elemento da lista"/>
			<param name="l"/>
			<param name="x"/>
			<lvar name="t_Nodo" count="5"/>
		</function>
		<function name="apaga_da_lista" access="auto" jdoc="null">
			<comm cntt="apaga um elemento da lista"/>
			<comm cntt="cria um ponteiro de nodo inicio e temp"/>
			<comm cntt="inicio aponta para a cabe�a da lista"/>
			<comm cntt="percorre a lista at� o fim"/>
			<comm cntt="se elemento da lista for igual a x, ent�o x esta na lista"/>
			<comm cntt="acaba com o loop"/>
			<comm cntt="aponta para o proximo elemento da lista"/>
			<comm cntt="se inicio for igual a NULL, � porque a lista foi pecorrida t� o fim e o elemento x n�o foi encontrado nela"/>
			<comm cntt="imprime uma mensagem de erro"/>
			<comm cntt="retorna um valor de erro que nada interfere no funcionamento do programa"/>
			<comm cntt="se x estiver na lista os codigos abaixo s�o execultados"/>
			<comm cntt="temp aponta para a posi��o onde x foi encontrado, mantendo assim o valor de x por equanto"/>
			<comm cntt="inicio aponta para o proximo elemento, agora inicio n�o tem mais o elemento igual a x"/>
			<comm cntt="faz o inicio conter uma referencia para o elemento anterior da lista"/>
			<comm cntt="faz o elemento anterior a x ter o referencia para o proximo elemento depois do que � igual a x"/>
			<comm cntt="libera a memoria armazenada para o elemento igual a x"/>
			<comm cntt="retorna o elemento que foi removido, que era igual a x"/>
			<param name="l"/>
			<param name="x"/>
			<lvar name="t_Nodo" count="5"/>
		</function>
		<function name="estahVazio" access="auto" jdoc="null">
			<comm cntt="testa se est� vazia"/>
			<comm cntt="se a lista for NULL ela est� vazia"/>
			<comm cntt="retorna 1, verdadeiro"/>
			<comm cntt="se a cabe�a da lista for NULL, a lista tamb�m est� vazia"/>
			<comm cntt="retorna 1, vardadeiro"/>
			<comm cntt="se o proximo elemento da cabe�a for NULL a lista tamb�m est� vazia, n�o se esque�a que por padr�o esta lista possui um elemento que � anterior a cabe�a, esse elemento � o inicio desta lista e sem ele a lista n�o funciona, se esse inicio de tudo n�o aponta para o proximo elemento da lista ent�o a lista est� vazia"/>
			<comm cntt="retorna 1, verdadeiro"/>
			<comm cntt="se n�o tiver vazia ela retorna 0"/>
			<param name="l"/>
		</function>
		<function name="cabeca" access="auto" jdoc="null">
			<comm cntt="retorna o elemento da cabe�a"/>
			<comm cntt="retorna o elemento da cabe�a, que � na verdade o proximo elemento do inicio de tudo"/>
			<param name="l"/>
		</function>
		<function name="imprimeLista" access="auto" jdoc="null">
			<comm cntt="imprime a lista"/>
			<comm cntt="aponta para o primeiro elemento da lista que � o proximo elemento do inicio de tudo"/>
			<comm cntt="contador"/>
			<comm cntt="enquanto existir elementos na lista ele continua percorrendo"/>
			<comm cntt="imprinme o elemento da lista"/>
			<comm cntt="aponta para o proximo elemento"/>
			<comm cntt="incrementa 1 ao contador"/>
			<comm cntt="Comentario no if"/>
			<param name="l"/>
			<lvar name="t_Nodo" count="5"/>
			<lvar name="cont" count="5"/>
			<lvar name="x" count="5"/>
		</function>
	</C-File>
	<C-File name="CONTROLE.H" sloc="50" jdoc="n">
		<function name="controle" access="auto" jdoc="null">
			<param name="cob_pos"/>
			<param name="cob_pos2"/>
			<param name="tamanho"/>
			<param name="campo"/>
			<param name="direcao"/>
			<param name="opcional"/>
			<lvar name="verifica" count="5"/>
		</function>
	</C-File>
</C-Project>