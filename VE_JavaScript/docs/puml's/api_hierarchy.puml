@startuml

skinparam shadowing false

' this is a simple diagram showing how the hierarchy
' of JSDT is given, for aid in extractor development

abstract class ASTNode {
}
ASTNode <|-- Expression
ASTNode <|-- ProgramElement
ASTNode <|-- VariableDeclaration
ASTNode <|-- JavaScriptUnit

' every class below inherits from ASTNode

class JavaScriptUnit {
    List statements()
}

abstract class Expression{
}
Expression <|-- SimpleName
Expression <|-- VariableDeclarationExpression

    class SimpleName{
        String getIdentifier()
    }

    class VariableDeclarationExpression {
        List<VariableDeclarationFragment> fragments()
    }

class VariableDeclaration{
    abstract SimpleName getName()
}
VariableDeclaration <|-- VariableDeclarationFragment

    class VariableDeclarationFragment{
        SimpleName getName()
        Expression getInitializer()
    }

abstract class ProgramElement{
}
ProgramElement <|-- BodyDeclaration
ProgramElement <|-- Statement

    abstract class BodyDeclaration{
    }
    BodyDeclaration <|-- AbstractTypeDeclaration
    BodyDeclaration <|-- FieldDeclaration
    BodyDeclaration <|--- FunctionDeclaration

        abstract class AbstractTypeDeclaration{
            SimpleName getName()
        }
        AbstractTypeDeclaration <|-- TypeDeclaration

            class TypeDeclaration {
                FieldDeclaration[] getFields()
                FunctionDeclaration[] getMethods()
            }

        class FieldDeclaration{
            List fragments()
        }

        class FunctionDeclaration{
            Block getBody()
        }

    abstract class Statement{
    }
    Statement <|-- Block
    Statement <|--- VariableDeclarationStatement
    Statement <|-- FunctionDeclarationStatement
    Statement <|--- TypeDeclarationStatement

        class Block{
            List statements()
        }

        class FunctionDeclarationStatement{
            FunctionDeclaration getDeclaration()
        }

        class TypeDeclarationStatement{
            AbstractTypeDeclaration getDeclaration()
        }

        class VariableDeclarationStatement{
            List<VariableDeclarationFragment> fragments()
        }




@enduml